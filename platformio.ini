; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
src_dir=source/src
data_dir=source/data
lib_dir=source/lib 

[env]
platform = espressif32
board = esp32doit-devkit-v1
framework = arduino

upload_speed = 460800
monitor_speed = 115200
lib_ldf_mode = deep+

board_build.partitions = huge_app.csv ;~/.platformio/packages/framework-arduinoespressif32/tools/partitions/

extra_scripts =
  pre:source/build/pre.py

lib_deps = bblanchon/ArduinoJson @ ^6.18.5
  bblanchon/StreamUtils @ ^1.6.1
  me-no-dev/ESP Async WebServer @ ^1.2.3
  adafruit/Adafruit GFX Library @ ^1.10.4
  https://github.com/peteha99/esp_gen_qr.git
  https://github.com/barn53/TFT_eSPI.git#master
  https://github.com/barn53/WiFiManager.git#adaptions_CoinThing

build_flags = 
    -D BUILD_FLAGS=1

[spi]
build_flags =
  ;###############################################################
  ; TFT_eSPI library setting here (no need to edit library files):
  ;###############################################################
  -D USER_SETUP_LOADED=1      ; Set this settings as valid
  -D ST7789_DRIVER=1          ; Select driver
  -D  SMOOTH_FONT=1            ; needed to work with TFT-eFEX
  -D  TFT_SCLK=18
  -D  TFT_MOSI=23
  -D  TFT_RST=25
  -D  TFT_DC=4
  -D  TFT_CS=-1
  -D  TFT_MISO=-1
; -D  TFT_INVERSION_ON=1
  -D  TFT_WIDTH=240            ; Set TFT size
  -D  TFT_HEIGHT=320
; -D  TFT_RGB_ORDER=TFT_RGB    ; Colour order Red-Green-Blue
  -D  TFT_RGB_ORDER=TFT_BGR    ; Colour order Blue-Green-Red
; -D  LOAD_GLCD=1              ; Load Fonts
; -D  LOAD_FONT2=1             ; Load Fonts
; -D  LOAD_FONT4=1             ; Load Fonts
; -D  LOAD_FONT7=1             ; Load Fonts
  -D  SPI_FREQUENCY=40000000  ; Set SPI frequency
  -D  SWAP_BYTES=1            ; For JPEG Decoder

[parallel]
build_flags =
  ;###############################################################
  ; TFT_eSPI library setting here (no need to edit library files):
  ;###############################################################
  -D USER_SETUP_LOADED=1      ; Set this settings as valid
  -D ILI9481_DRIVER=1         ; Select driver
  -D  SMOOTH_FONT=1           ; needed to work with TFT-eFEX
  -D  TFT_PARALLEL_8_BIT=1    ; Tell the library to use 8 bit parallel mode (otherwise SPI is assumed)
  -D  TFT_CS=33               ; Chip select control pin (library pulls permanently low
  -D  TFT_DC=15               ; Data Command control pin - must use a pin in the range 0-31
  -D  TFT_RST=32              ; Reset pin, toggles on startup
  -D  TFT_WR=4                ; Write strobe control pin - must use a pin in the range 0-31
  -D  TFT_RD=2                ; Read strobe control pin
  -D  TFT_D0=12               ; Must use pins in the range 0-31 for the data bus
  -D  TFT_D1=13               ; so a single register write sets/clears all bits.
  -D  TFT_D2=26               ; Pins can be randomly assigned, this does not affect
  -D  TFT_D3=25               ; TFT screen update performance.
  -D  TFT_D4=17
  -D  TFT_D5=16
  -D  TFT_D6=27
  -D  TFT_D7=14
  -D  TFT_WIDTH=320            ; Set TFT size
  -D  TFT_HEIGHT=480
; -D  TFT_RGB_ORDER=TFT_RGB    ; Colour order Red-Green-Blue
; -D  TFT_RGB_ORDER=TFT_BGR    ; Colour order Blue-Green-Red
; -D  LOAD_GLCD=1              ; Load Fonts
; -D  LOAD_FONT2=1             ; Load Fonts
; -D  LOAD_FONT4=1             ; Load Fonts
; -D  LOAD_FONT7=1             ; Load Fonts
  -D  SWAP_BYTES=1            ; For JPEG Decoder

[env:debug]
build_flags = ${env.build_flags}
  ${spi.build_flags}
  -D SERIAL_TRACE=1
  -D TRACER=1
  -D DEBUG=1

build_type = debug
debug_init_break = tbreak setup
debug_load_mode = modified ; always ; manual
debug_build_flags = -O0 -ggdb3 -g3
debug_tool = esp-prog  ; https://docs.platformio.org/en/latest/plus/debug-tools/esp-prog.html

[env:release]
build_flags = ${env.build_flags}
    ${spi.build_flags}

